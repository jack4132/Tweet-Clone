{"ast":null,"code":"\"use strict\";\n/**\n * Copyright (c) 2017-present, Ephox, Inc.\n *\n * This source code is licensed under the Apache 2 license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.mergePlugins = exports.isTextarea = exports.uuid = exports.bindHandlers = exports.isFunction = void 0;\n\nvar EditorPropTypes_1 = require(\"./components/EditorPropTypes\");\n\nexports.isFunction = function (x) {\n  return typeof x === 'function';\n};\n\nvar isEventProp = function isEventProp(name) {\n  return name in EditorPropTypes_1.eventPropTypes;\n};\n\nvar findEventHandlers = function findEventHandlers(props) {\n  return Object.keys(props).filter(isEventProp).filter(function (name) {\n    return exports.isFunction(props[name]);\n  }).map(function (name) {\n    return {\n      handler: props[name],\n      eventName: name.substring(2)\n    };\n  });\n};\n\nexports.bindHandlers = function (editor, props, boundHandlers) {\n  findEventHandlers(props).forEach(function (found) {\n    // Unbind old handler\n    var oldHandler = boundHandlers[found.eventName];\n\n    if (exports.isFunction(oldHandler)) {\n      editor.off(found.eventName, oldHandler);\n    } // Bind new handler\n\n\n    var newHandler = function newHandler(e) {\n      return found.handler(e, editor);\n    };\n\n    boundHandlers[found.eventName] = newHandler;\n    editor.on(found.eventName, newHandler);\n  });\n};\n\nvar unique = 0;\n\nexports.uuid = function (prefix) {\n  var time = Date.now();\n  var random = Math.floor(Math.random() * 1000000000);\n  unique++;\n  return prefix + '_' + random + unique + String(time);\n};\n\nexports.isTextarea = function (element) {\n  return element !== null && element.tagName.toLowerCase() === 'textarea';\n};\n\nvar normalizePluginArray = function normalizePluginArray(plugins) {\n  if (typeof plugins === 'undefined' || plugins === '') {\n    return [];\n  }\n\n  return Array.isArray(plugins) ? plugins : plugins.split(' ');\n};\n\nexports.mergePlugins = function (initPlugins, inputPlugins) {\n  return normalizePluginArray(initPlugins).concat(normalizePluginArray(inputPlugins));\n};","map":{"version":3,"sources":["/Users/jacksonthounaojam/Downloads/student/Web devop/React/project/twitter-clone/frontend/node_modules/@tinymce/tinymce-react/lib/cjs/main/ts/Utils.js"],"names":["Object","defineProperty","exports","value","mergePlugins","isTextarea","uuid","bindHandlers","isFunction","EditorPropTypes_1","require","x","isEventProp","name","eventPropTypes","findEventHandlers","props","keys","filter","map","handler","eventName","substring","editor","boundHandlers","forEach","found","oldHandler","off","newHandler","e","on","unique","prefix","time","Date","now","random","Math","floor","String","element","tagName","toLowerCase","normalizePluginArray","plugins","Array","isArray","split","initPlugins","inputPlugins","concat"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,YAAR,GAAuBF,OAAO,CAACG,UAAR,GAAqBH,OAAO,CAACI,IAAR,GAAeJ,OAAO,CAACK,YAAR,GAAuBL,OAAO,CAACM,UAAR,GAAqB,KAAK,CAA5G;;AACA,IAAIC,iBAAiB,GAAGC,OAAO,CAAC,8BAAD,CAA/B;;AACAR,OAAO,CAACM,UAAR,GAAqB,UAAUG,CAAV,EAAa;AAAE,SAAO,OAAOA,CAAP,KAAa,UAApB;AAAiC,CAArE;;AACA,IAAIC,WAAW,GAAG,SAAdA,WAAc,CAAUC,IAAV,EAAgB;AAC9B,SAAOA,IAAI,IAAIJ,iBAAiB,CAACK,cAAjC;AACH,CAFD;;AAGA,IAAIC,iBAAiB,GAAG,SAApBA,iBAAoB,CAAUC,KAAV,EAAiB;AACrC,SAAOhB,MAAM,CAACiB,IAAP,CAAYD,KAAZ,EACFE,MADE,CACKN,WADL,EAEFM,MAFE,CAEK,UAAUL,IAAV,EAAgB;AAAE,WAAOX,OAAO,CAACM,UAAR,CAAmBQ,KAAK,CAACH,IAAD,CAAxB,CAAP;AAAyC,GAFhE,EAGFM,GAHE,CAGE,UAAUN,IAAV,EAAgB;AAAE,WAAQ;AAC/BO,MAAAA,OAAO,EAAEJ,KAAK,CAACH,IAAD,CADiB;AAE/BQ,MAAAA,SAAS,EAAER,IAAI,CAACS,SAAL,CAAe,CAAf;AAFoB,KAAR;AAGtB,GANE,CAAP;AAOH,CARD;;AASApB,OAAO,CAACK,YAAR,GAAuB,UAAUgB,MAAV,EAAkBP,KAAlB,EAAyBQ,aAAzB,EAAwC;AAC3DT,EAAAA,iBAAiB,CAACC,KAAD,CAAjB,CAAyBS,OAAzB,CAAiC,UAAUC,KAAV,EAAiB;AAC9C;AACA,QAAIC,UAAU,GAAGH,aAAa,CAACE,KAAK,CAACL,SAAP,CAA9B;;AACA,QAAInB,OAAO,CAACM,UAAR,CAAmBmB,UAAnB,CAAJ,EAAoC;AAChCJ,MAAAA,MAAM,CAACK,GAAP,CAAWF,KAAK,CAACL,SAAjB,EAA4BM,UAA5B;AACH,KAL6C,CAM9C;;;AACA,QAAIE,UAAU,GAAG,SAAbA,UAAa,CAAUC,CAAV,EAAa;AAAE,aAAOJ,KAAK,CAACN,OAAN,CAAcU,CAAd,EAAiBP,MAAjB,CAAP;AAAkC,KAAlE;;AACAC,IAAAA,aAAa,CAACE,KAAK,CAACL,SAAP,CAAb,GAAiCQ,UAAjC;AACAN,IAAAA,MAAM,CAACQ,EAAP,CAAUL,KAAK,CAACL,SAAhB,EAA2BQ,UAA3B;AACH,GAVD;AAWH,CAZD;;AAaA,IAAIG,MAAM,GAAG,CAAb;;AACA9B,OAAO,CAACI,IAAR,GAAe,UAAU2B,MAAV,EAAkB;AAC7B,MAAIC,IAAI,GAAGC,IAAI,CAACC,GAAL,EAAX;AACA,MAAIC,MAAM,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACD,MAAL,KAAgB,UAA3B,CAAb;AACAL,EAAAA,MAAM;AACN,SAAOC,MAAM,GAAG,GAAT,GAAeI,MAAf,GAAwBL,MAAxB,GAAiCQ,MAAM,CAACN,IAAD,CAA9C;AACH,CALD;;AAMAhC,OAAO,CAACG,UAAR,GAAqB,UAAUoC,OAAV,EAAmB;AACpC,SAAOA,OAAO,KAAK,IAAZ,IAAoBA,OAAO,CAACC,OAAR,CAAgBC,WAAhB,OAAkC,UAA7D;AACH,CAFD;;AAGA,IAAIC,oBAAoB,GAAG,SAAvBA,oBAAuB,CAAUC,OAAV,EAAmB;AAC1C,MAAI,OAAOA,OAAP,KAAmB,WAAnB,IAAkCA,OAAO,KAAK,EAAlD,EAAsD;AAClD,WAAO,EAAP;AACH;;AACD,SAAOC,KAAK,CAACC,OAAN,CAAcF,OAAd,IAAyBA,OAAzB,GAAmCA,OAAO,CAACG,KAAR,CAAc,GAAd,CAA1C;AACH,CALD;;AAMA9C,OAAO,CAACE,YAAR,GAAuB,UAAU6C,WAAV,EAAuBC,YAAvB,EAAqC;AACxD,SAAON,oBAAoB,CAACK,WAAD,CAApB,CAAkCE,MAAlC,CAAyCP,oBAAoB,CAACM,YAAD,CAA7D,CAAP;AACH,CAFD","sourcesContent":["\"use strict\";\n/**\n * Copyright (c) 2017-present, Ephox, Inc.\n *\n * This source code is licensed under the Apache 2 license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.mergePlugins = exports.isTextarea = exports.uuid = exports.bindHandlers = exports.isFunction = void 0;\nvar EditorPropTypes_1 = require(\"./components/EditorPropTypes\");\nexports.isFunction = function (x) { return typeof x === 'function'; };\nvar isEventProp = function (name) {\n    return name in EditorPropTypes_1.eventPropTypes;\n};\nvar findEventHandlers = function (props) {\n    return Object.keys(props)\n        .filter(isEventProp)\n        .filter(function (name) { return exports.isFunction(props[name]); })\n        .map(function (name) { return ({\n        handler: props[name],\n        eventName: name.substring(2)\n    }); });\n};\nexports.bindHandlers = function (editor, props, boundHandlers) {\n    findEventHandlers(props).forEach(function (found) {\n        // Unbind old handler\n        var oldHandler = boundHandlers[found.eventName];\n        if (exports.isFunction(oldHandler)) {\n            editor.off(found.eventName, oldHandler);\n        }\n        // Bind new handler\n        var newHandler = function (e) { return found.handler(e, editor); };\n        boundHandlers[found.eventName] = newHandler;\n        editor.on(found.eventName, newHandler);\n    });\n};\nvar unique = 0;\nexports.uuid = function (prefix) {\n    var time = Date.now();\n    var random = Math.floor(Math.random() * 1000000000);\n    unique++;\n    return prefix + '_' + random + unique + String(time);\n};\nexports.isTextarea = function (element) {\n    return element !== null && element.tagName.toLowerCase() === 'textarea';\n};\nvar normalizePluginArray = function (plugins) {\n    if (typeof plugins === 'undefined' || plugins === '') {\n        return [];\n    }\n    return Array.isArray(plugins) ? plugins : plugins.split(' ');\n};\nexports.mergePlugins = function (initPlugins, inputPlugins) {\n    return normalizePluginArray(initPlugins).concat(normalizePluginArray(inputPlugins));\n};\n"]},"metadata":{},"sourceType":"script"}